// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SennheiserBackend.Database;

#nullable disable

namespace SennheiserBackend.Migrations
{
    [DbContext(typeof(DemoDbContext))]
    partial class DemoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.1");

            modelBuilder.Entity("SennheiserBackend.Database.Repositories.Entities.MicrophoneEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<int>("MicGain")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ReceiverId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.HasIndex("ReceiverId")
                        .IsUnique();

                    b.ToTable("MicrophoneEntity");
                });

            modelBuilder.Entity("SennheiserBackend.Database.Repositories.Entities.ReceiverEntity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Ip")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Id")
                        .IsUnique();

                    b.ToTable("Receivers");
                });

            modelBuilder.Entity("SennheiserBackend.Database.Repositories.Entities.MicrophoneEntity", b =>
                {
                    b.HasOne("SennheiserBackend.Database.Repositories.Entities.ReceiverEntity", "Receiver")
                        .WithOne("Microphone")
                        .HasForeignKey("SennheiserBackend.Database.Repositories.Entities.MicrophoneEntity", "ReceiverId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Receiver");
                });

            modelBuilder.Entity("SennheiserBackend.Database.Repositories.Entities.ReceiverEntity", b =>
                {
                    b.Navigation("Microphone")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
